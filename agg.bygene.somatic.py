'''
script that takes in variant matrix generated by reshape.long2wide.py, DF with variants of interest and gene annotation
aggregates variants by gene, counts number of variants (disregards zygosity)
transposes DF for merging with covariate information
'''

import pandas as pd
from sys import argv

script, matrix, anno, output=argv

# function that counts number of variants in a gene
# parses format produced by parse.vcf.readcounts.py ex: 1:21:32 (geno : ref reads : alt reads)
def agg_genotypes(x):
    count=0
    for i in x:
        if str(i) != "0":
	    count+=1
    return count

# read in matrix with variants of interest as rows and indivduals as columns
DF=pd.read_csv(matrix, sep='\t')
POS=pd.read_csv(anno, sep='\t')

# convert chrom column to string for merging
DF.CHR=DF.CHR.astype('str')
POS.CHR=POS.CHR.astype('str')

# pull out sites of interest
GENE=pd.merge(DF, POS, on=['CHR','POS','REF','ALT'])

# aggreagte genotypes by gene, count number of variants
GENE.drop(['CHR','POS','REF','ALT'], axis=1, inplace=True)
GENE=GENE.groupby('GENE').agg(agg_genotypes).reset_index()

# clean up VCF IDs for eventual merging
new=['ID'] +map(lambda x: str(x).split("-")[2], GENE.columns[1:])
GENE.columns=new

# transpose so that individuals are rows and genes are columns
GENET=GENE.transpose().reset_index()

GENET.to_csv(output, sep='\t',index=False, header=False)
